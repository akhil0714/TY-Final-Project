<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">


  <!-- Required meta tag -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap css -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

  <!-- bootstrap icon -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

  <!-- Font Awesome icon cdn link -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css">

  <link rel="stylesheet" href="/Styles/index.css">
  <link rel="stylesheet" href="/Styles/footer.css">
  <link rel="stylesheet" href="/Styles/style.css">
  <link rel="stylesheet" href="/Styles/cart.css">

  <title>Shopping Cart</title>
</head>

<body>
  <style>
    .product-card {
      border: 1px solid #ddd;
      padding: 10px;
      width: 83vw;
      justify-content: space-between;
      display: flex;
      align-items: center;
      height: 20vh;
      margin-bottom: 10px;
    }

    .product-image {
      width: 100px;
      height: auto;
      margin-bottom: 10px;
    }

    .quantity-controls {
      display: flex;
      align-items: center;
      justify-content: space-evenly;
      margin-top: 10px;
      width: 30vw;
    }

    .quantity-button {
      background-color: #007bff;
      color: #fff;
      border: none;
      padding: 5px 10px;
      margin-right: 5px;
      cursor: pointer;
    }

    .quantity-display {
      font-weight: bold;
      margin: 0 5px;
    }

    .delete-button {
      background-color: #dc3545;
      color: #fff;
      border: none;
      padding: 5px 10px;
      cursor: pointer;
    }

    .cart-product-price {
      font-weight: bold;
      margin: 0 !important;
    }

    .checkout_btn {
      width: 15vw !important;
    }

    .checkout_btn a {
      color: #fff !important;
      text-decoration: none !important;
    }
  </style>

  <!-- ################################################### navbar start ################################################################# -->
  <nav class="navbar navbar-expand-lg sticky-top" style="background: rgb(2, 86, 116);">
    <div class="container">
      <a class="navbar-brand" href="/"><img class="logo" src="./Images/logo.jpg"></a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav m-auto my-2 my-lg-0">
          <li class="nav-item">
            <a class="nav-link" href="/" active>Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/">About Us</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/">Store</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/">Contact</a>
          </li>

        </ul>
        <form class="d-flex" role="search">
          <% if (locals.user) { %>
            <a href="/logout" class="btn btn-light px-3 ms-5 my-3 align-text-middle">LOGOUT</a>

            <% } else { %>
              <a href="/logout" class="btn btn-light px-3 ms-5 my-3 align-text-middle">LOGOUT</a>
              <% } %>
        </form>
      </div>
    </div>
  </nav>

  <!-- ######################################################### navbar ends ################################################################# -->

  <!-- ######################################################### cart item start ############################################################# -->
  <!-- cart.ejs -->
  <div class="card">
    <div class="row">
      <!-- Cart items -->
      <div class="col-md-8 cart">
        <div class="title">
          <div class="row">
            <div class="col">
              <h4><b style="color:rgb(6, 86, 108)">Shopping Cart</b></h4>
            </div>
          </div>
        </div>
        <div id="cartItems"></div> <!-- Ensure this div exists and has the id 'cartItems' -->
      </div>
      <!-- Summary -->
      <div class="summary">
        <div>
          <h5><b>Summary</b></h5>
        </div>
        <div class="row" style="border-top: 1px solid white; padding: 2vh 0;">
          <div class="col">TOTAL PRICE</div>
          <div class="col text-right">Rs <span id="total_price"></span></div>
          <button class="btn btn-dark py-2 px-5 mb-5 rounded checkout_btn" style="background-color: rgb(2, 86, 116); "
            onclick="openModal()">Proceed to Checkout</button>
        </div>

      </div>
    </div>
  </div>


  <!-- ######################################################### cart item ends ############################################################## -->
  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close" onclick="closeModal()"><i class="bi bi-x"></i>
      </span>
      <div class="cont">

        <form action="/placeOrder" method="post">

          <div class="row">

            <div class="col">

              <h3 class="title">Billing address</h3>

              <div class="inputBox">
                <span>Full name :</span>
                <input type="text" placeholder="Full Name" name="full_name">

              </div>
              <div class="inputBox">
                <span>Phone :</span>
                <input type="text" placeholder="+91" name="phone">
              </div>
              <div class="inputBox">
                <span>Address :</span>
                <input type="text" placeholder="ROOM - STREET NAME" name="address">
              </div>
              <div class="inputBox">
                <span>City :</span>
                <input type="text" placeholder="CITY NAME" name="city">
              </div>

              <div class="flex">
                <div class="inputBox">
                  <span>State :</span>
                  <input type="text" placeholder="STATE NAME" name="state">
                </div>
                <div class="inputBox">
                  <span>Zip code :</span>
                  <input type="text" placeholder="000 000" name="zipCode">
                </div>
              </div>

            </div>

            <div class="col">

              <h3 class="title">Payment</h3>

              <div class="inputBox">
                <span style="margin-bottom: 25px;">Payment accepted :</span>
                <div class="payment_method">
                  <div class="one">
                    <img src="/Images/upi.png" alt="">
                    <h6>UPI</h6>
                    <input type="radio" name="payment_method" id="upi" value="UPI">
                  </div>
                  <div class="one">
                    <img src="/Images/neft.png" alt="">
                    <h6>NEFT</h6>
                    <input type="radio" name="payment_method" id="neft" value="NEFT">
                  </div>
                  <div class="one">
                    <img src="/Images/cod.png" alt="">
                    <h6>COD</h6>
                    <input type="radio" name="payment_method" id="cod" value="COD">
                  </div>
                </div>
              </div>
              <div id="upiScanner" style="display: none;">
                <img src="/Images/qrcode.png" alt="">
              </div>
              <div id="codDetails" style="display: none;"></div>
              <div id="neftDetails" style="display: none;">
                <!-- NEFT details -->
                <h6>NEFT Payment Details</h6>
                <div class="inputBox">
                  <span>Beneficiary Name:</span>
                  <input type="text" id="beneficiaryName" placeholder="Enter Beneficiary Name">
                </div>
                <div class="inputBox">
                  <span>Beneficiary Account Number:</span>
                  <input type="text" id="beneficiaryAccountNumber" placeholder="Enter Beneficiary Account Number">
                </div>
                <div class="inputBox">
                  <span>Beneficiary Bank Name:</span>
                  <input type="text" id="beneficiaryBankName" placeholder="Enter Beneficiary Bank Name">
                </div>
                <div class="inputBox">
                  <span>Beneficiary Bank IFSC Code:</span>
                  <input type="text" id="beneficiaryIFSCCode" placeholder="Enter IFSC Code">
                </div>


              </div>


              <div class="inputBox">
                <div class="inputBox" id="total_input">
                  <span>Total Amount:</span>
                  <input type="text" id="tPrice" name="t_Price" placeholder="Enter Amount" disabled>
                </div>

                <!-- Hidden input field to store the value -->
                <input type="hidden" id="hidden_tPrice" name="hidden_tPrice">
              </div>


            </div>

          </div>


          <button class="btn btn-dark py-2 px-5 mb-5 rounded pay_button" style="background-color: rgb(2, 86, 116); "
            onclick="payment()">Proceed to Checkout</button>

        </form>


      </div>
    </div>
  </div>

  <!-- ###################################################### footer start ################################################################### -->

  <footer class="footer">
    <div class="foot-container">
      <div class="foot-row">
        <div class="footer-col">
          <h4>CUSTOMER CARE</h4>
          <ul>
            <li><a href="#">Our services</a></li>
            <li><a href="#">Terms and Conditions</a></li>
            <li><a href="#">Bulk Order</a></li>
          </ul>
        </div>
        <div class="footer-col">
          <h4>FAQ"s</h4>
          <li><a href="#">No E-Charges</a></li>
          <li><a href="#">Shopping & Delivery</a></li>
          <li><a href="#">Always Care</a></li>
          <li><a href="#">About Us</a></li>
        </div>
        <div class="footer-col">
          <h4>Location</h4>
          <ul>
            <li><iframe
                src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3767.5285149303604!2d72.81701917466863!3d19.215784847570365!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3be7b79e893734df%3A0x39419900d5e49798!2sDG%20Cashew%20Traders!5e0!3m2!1sen!2sin!4v1708527376452!5m2!1sen!2sin"
                width="250" height="150" style="border:0;" allowfullscreen="" loading="lazy"
                referrerpolicy="no-referrer-when-downgrade"></iframe></li>
          </ul>
        </div>
        <div class="footer-col">
          <h4>Social Media</h4>
          <div class="social-links">
            <a href="https://wa.me/p/5716250431821968/918433822411" target="_blank"><i class="fab fa-whatsapp"></i></a>
            <a href="https://www.instagram.com/dgcashewtraders?igsh=YnpqZDh2Mm91NXZx" target="_blank"><i
                class="fab fa-instagram"></i></a>
          </div>
        </div>
      </div>
    </div>
  </footer>

  <!-- ###################################################### footer ends #################################################################### -->

  <!-- Bootstrap css -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
    crossorigin="anonymous"></script>

  <script type="module" src="../models/product.js"></script>
</body>
<!-- Define a global JavaScript variable to store products data -->
<script>
  // {Payemnt}


  function payment() {
    // Get the total price value
    const tPrice = document.getElementById("tPrice").value;

    // Set the value of hidden input field hidden_tPrice
    document.getElementById("hidden_tPrice").value = tPrice;

    // Prevent default form submission behavior

    // Get all input fields
    const fullName = document.querySelector('input[name="full_name"]').value;
    const email = document.querySelector('input[name="email"]').value;
    const address = document.querySelector('input[name="address"]').value;
    const city = document.querySelector('input[name="city"]').value;
    const state = document.querySelector('input[name="state"]').value;
    const zipCode = document.querySelector('input[name="zipCode"]').value;

    // Check if any field is empty
    if (!fullName || !email || !address || !city || !state || !zipCode) {
      alert("Please fill in all fields before proceeding to checkout.");
    } else {
      // Submit the form
      document.getElementById("orderForm").submit();
    }
  }

  //For upi sccaner

  document.addEventListener("DOMContentLoaded", function () {
    const upiRadio = document.getElementById("upi");
    const codRadio = document.getElementById("cod");
    const neftRadio = document.getElementById("neft"); // Added line
    const upiScannerDiv = document.getElementById("upiScanner");
    const codDetailsDiv = document.getElementById("codDetails");
    const neftDetailsDiv = document.getElementById("neftDetails"); // Added line
    const total_input = document.getElementById("total_input")
    upiRadio.addEventListener("click", function () {
      upiScannerDiv.style.display = "block";
      codDetailsDiv.style.display = "none";
      neftDetailsDiv.style.display = "none";
      total_input.style.display = "block" // Hide NEFT details when UPI is selected
    });

    codRadio.addEventListener("click", function () {
      upiScannerDiv.style.display = "none";
      codDetailsDiv.style.display = "block";
      neftDetailsDiv.style.display = "none";
      total_input.style.display = "block" // Hide NEFT details when COD is selected
    });

    neftRadio.addEventListener("click", function () {
      upiScannerDiv.style.display = "none";
      codDetailsDiv.style.display = "none";
      neftDetailsDiv.style.display = "block";
      total_input.style.display = "block"  // Show NEFT details when NEFT is selected
    });
  });


  // Retrieve cart items from localStorage
  //modal js 
  var modal = document.getElementById("myModal");

  // Get the button that opens the modal
  var btn = document.querySelector(".checkout_btn");

  // Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];

  // When the user clicks the button, open the modal
  btn.onclick = function () {
    modal.style.display = "block";
  }

  // When the user clicks on <span> (x), close the modal
  span.onclick = function () {
    modal.style.display = "none";
  }

  // When the user clicks anywhere outside of the modal, close it
  window.onclick = function (event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }

  // Function to open the modal
  // Populate the total price input field and disable user input
  // Populate the total price span with the total price
  // Function to open the modal
  // Function to open the modal


  // Function to open the modal
  function openModal() {
    // Display the modal
    modal.style.display = "block";

    // Update the total price
    updateTotalPrice();
  }

  // Function to close the modal
  function closeModal() {
    modal.style.display = "none";
  }

  function initializeCart() {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    localStorage.setItem('cart', JSON.stringify(cart));
    updateTotalPrice();
  }

  let cart = JSON.parse(localStorage.getItem('cart')) || [];

  // Check if quantity property exists for each product, if not, set it to 1
  cart.forEach(product => {
    if (!product.quantity || isNaN(product.quantity)) {
      product.quantity = 1;
    }
  });

  // Get the container element
  const cartItemsContainer = document.getElementById('cartItems');

  // Render each product in the cart
  function renderCart() {

    cartItemsContainer.innerHTML = '';


    cart.forEach(product => {
      // Create container for product details
      const productCard = document.createElement('div');
      productCard.classList.add('product-card');

      // Product image
      const productImage = document.createElement('img');
      productImage.src = product.image;
      productImage.alt = product.name;
      productImage.classList.add('product-image');
      productCard.appendChild(productImage);

      // Product name
      const productName = document.createElement('h5');
      productName.textContent = product.name;
      productCard.appendChild(productName);

      // Product price
      const productPrice = document.createElement('p');
      productPrice.classList.add('cart-product-price')
      productPrice.textContent = `Price: Rs ${product.amount}/-`;
      productCard.appendChild(productPrice);

      // Quantity display and controls
      const quantityControls = document.createElement('div');
      quantityControls.classList.add('quantity-controls');

      // Decrease quantity button
      const decreaseButton = document.createElement('button');
      decreaseButton.textContent = '-';
      decreaseButton.classList.add('quantity-button');
      decreaseButton.addEventListener('click', () => decreaseQuantity(product._id));
      quantityControls.appendChild(decreaseButton);

      // Display quantity
      const quantityDisplay = document.createElement('span');
      quantityDisplay.textContent = product.quantity;
      quantityDisplay.classList.add('quantity-display');
      quantityControls.appendChild(quantityDisplay);

      // Increase quantity button
      const increaseButton = document.createElement('button');
      increaseButton.textContent = '+';
      increaseButton.classList.add('quantity-button');
      increaseButton.addEventListener('click', () => increaseQuantity(product._id));
      quantityControls.appendChild(increaseButton);

      // Delete button
      const deleteButton = document.createElement('button');
      deleteButton.textContent = 'Delete';
      deleteButton.classList.add('delete-button');
      deleteButton.addEventListener('click', () => deleteProduct(product._id));
      quantityControls.appendChild(deleteButton);

      productCard.appendChild(quantityControls);

      // Append product card to container
      cartItemsContainer.appendChild(productCard);
    });
    updateTotalPrice()
  }

  // Function to decrease quantity
  function decreaseQuantity(productId) {
    const index = cart.findIndex(product => product._id === productId);
    if (index !== -1) {
      if (cart[index].quantity > 1) {
        cart[index].quantity--;
      }
    }
    localStorage.setItem('cart', JSON.stringify(cart));
    renderCart();
    updateTotalPrice();
  }

  // Function to increase quantity
  function increaseQuantity(productId) {
    const index = cart.findIndex(product => product._id === productId);
    if (index !== -1) {
      cart[index].quantity++;
    }
    localStorage.setItem('cart', JSON.stringify(cart));
    renderCart();
    updateTotalPrice();
  }

  function addToCart(product) {
    // Retrieve cart items from localStorage or initialize an empty array
    let cart = JSON.parse(localStorage.getItem('cart')) || [];

    // Add the product to the cart
    cart.push(product);

    // Save the updated cart back to localStorage
    localStorage.setItem('cart', JSON.stringify(cart));

    // Update cart count
    const cartCountElement = document.getElementById('cart-count');
    cartCountElement.textContent = cart.length; // Update the cart count

    // Redirect to cart page (if needed)
    window.location.href = '/cart';
    updateTotalPrice();

  }
  const tPriceInput = document.getElementById('tPrice');
  const hiddenTPriceInput = document.getElementById('hidden_tPrice');

  // Update the value of the hidden input field when the visible input field changes
  tPriceInput.addEventListener('input', () => {
    hiddenTPriceInput.value = tPriceInput.value;
  });
  const totalPriceElement = document.getElementById('total_price');
  // Function to update total price
  function updateTotalPrice() {
    let totalPrice = 0;

    // Calculate the total price based on the quantity and price of each product
    cart.forEach(product => {
      totalPrice += product.amount * product.quantity;
    });

    // Update the total price span element in the UI
    const totalPriceSpan = document.getElementById('total_price');
    totalPriceSpan.textContent = totalPrice.toFixed(2); // Assuming you want to display the total price with two decimal places

    // Get the total price input field in the modal
    const totalPriceInput = document.getElementById('tPrice');

    // Populate the total price input field with the total price
    totalPriceInput.value = totalPrice.toFixed(2); // Assuming you want to display the total price with two decimal places

    // Disable the total price input field
    // totalPriceInput.disabled = true;
  }


  // Call updateTotalPrice() when the cart page is loaded


  // Function to delete product from cart
  function deleteProduct(productId) {
    cart = cart.filter(product => product._id !== productId);
    localStorage.setItem('cart', JSON.stringify(cart));
    renderCart();
    updateTotalPrice();
  }

  // Initial rendering
  renderCart();
  updateTotalPrice()

  window.addEventListener('load', updateTotalPrice);
  window.onload = function () {
    initializeCart();
  };
</script>

</html>